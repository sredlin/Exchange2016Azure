{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {


    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "trainee": {
      "type": "string",
      "minLength": 3,
      "maxLength": 3,
      "metadata": {
        "description": "Trainee  Nick Name."
      }
    },
    "Domain": {
      "type": "Object",
      "allowedValues": [
        {
          "name": "Ausbildung",
          "ResourceGroup": "rg-publicdns",
          "domain": "vbu-ausbildung.ml"
        },
        {
          "name": "Schulung",
          "ResourceGroup": "rg-publicdns-schulung",
          "domain": "vbu-schulung.ml"
        }
      ],
      "defaultValue": {
          "name": "Ausbildung",
          "ResourceGroup": "rg-publicdns",
          "domain": "vbu-ausbildung.ml"
        },
      "metadata": {
        "description": "Setzt die Domain entsprechend der Auswahl."
      }
    }
  },

  "variables": {
    "vmDataDiskCount": 2,
    "exchangeStorageSizeInGB": 10,
    "charactersToSkip": 10,
    "Company": "LEARN",
    "fqdn": "[concat(parameters('trainee'),'.',parameters('Domain').domain)]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "addressPrefix": "10.0.0.0/16",
    "publicIPAddressNameDC": "[tolower(concat(variables('Company'),'-',parameters('trainee'),'-pip-',skip(variables('vmName'),variables('charactersToSkip'))))]",
    "publicIPAddressType": "Dynamic",
    "subnetPrefix": "10.0.0.0/24",
    "subnetName": "[tolower(concat('Subnet0'))]",
    "exchangeDomainName": "[tolower(concat(parameters('trainee'), '.intern'))]",
    "uniqueDnsNameForPublicIPDC": "[tolower(concat(variables('Company'),'-',parameters('trainee'),'-dns-',skip(variables('vmName'),variables('charactersToSkip'))))]",
    "location": "[resourceGroup().location]",
    "vmOsSku": "2016-Datacenter",
    "vmAdminUsername": "vbu-adm",
    "vmName": "[tolower(concat(variables('Company'),'-',parameters('trainee'),'-vm-dc'))]",
    "vmNameEX": "[tolower(concat(variables('Company'),'-',parameters('trainee'),'-vm-ex'))]",
    "vmOsDiskName": "[concat(variables('vmName'),'-osdisk')]",
    "vmDataDiskName": "[concat(variables('vmName'),'-datadisk')]",
    "vmSize": "Standard_D3_v2",
    "vmDataDiskSize": "15",
    "vmNicName": "[tolower(concat(variables('Company'),'-',parameters('trainee'),'-nic-',skip(variables('vmName'),variables('charactersToSkip'))))]",
    "virtualNetworkName": "[tolower(concat(variables('Company'),'-',parameters('trainee'),'-vn-infrastructure'))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "modulesPath": "https://raw.githubusercontent.com/sredlin/Exchange2016Azure/master/",
    "modulesExchange": "ExchangeWorkload.zip",
    "modulesUrlExchange": "[concat(variables('modulesPath'),variables('modulesExchange'))]",
    "modulesExchangeData": "ExchangeWorkload.psd1",
    "modulesUrlExchangeData": "[concat(variables('modulesPath'),variables('modulesExchangeData'))]",
    "configurationFunctionExchange": "ExchangeWorkload.ps1\\InstallAndConfigureExchange",
    "nsgName": "[tolower(concat(variables('Company'),'-',parameters('trainee'),'-nsg-infrastructure'))]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "exchangeInstallerPath": "InstallerExchange",
    "exchangeISOUri": "https://download.microsoft.com/download/0/5/f/05fbbfff-8316-4d12-a59d-80b3c56e4d81/ExchangeServer2016-x64-cu17.iso",
    "modulesExchangeISODownload": "CSDownloadISO.ps1",
    "modulesUrlExchangeISODownload": "[concat(variables('modulesPath'),variables('modulesExchangeISODownload'))]",
    "DiagStorageName": "[tolower(concat(variables('Company'),parameters('trainee'),'sadiag'))]",
    "DiagStorageType": "Standard_LRS",
    "VMStorageType": "Standard_LRS",
    "accountid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('diagnosticsStorageAccountResourceGroup'), '/providers/', 'Microsoft.Storage/storageAccounts/', variables('DiagStorageName'))]",
    "diagnosticsStorageAccountResourceGroup": "[resourcegroup().name]",
    "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'), variables('wadperfcounters1'), variables('wadperfcounters2'), '<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('diagnosticsStorageAccountResourceGroup'), '/providers/', 'Microsoft.Compute/virtualMachines/', variables('vmName'))]",
    "wadcfgxend": "\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>",
    "UpdateNetwork": "VirtualNetwork.json",
    "UpdateNetworkURL": "[concat(variables('modulesPath'),variables('UpdateNetwork'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('DiagStorageName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[variables('DiagStorageType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressNameDC'))]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('uniqueDnsNameForPublicIPDC')]"
        }
      }
    },
    {
      "apiVersion": "2016-04-01",
      "type": "Microsoft.Network/dnsZones",
      "name": "[variables('fqdn')]",
      "location": "global",
      "dependsOn": [],
      "tags": {},
      "properties": {}
    },
    {
      "apiVersion": "2018-05-01",
      "name": "NameServerDelegation-d62f6a20837f4d498fe37b42789b907e",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('Domain').ResourceGroup]",
      "subscriptionId": "[subscription().subscriptionId]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://dns.hosting.portal.azure.net/dns/Content/4.12.0.1550/Dns/Templates/NSDelegationLinkedTemplate.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nsServers": {
            "value": "[reference(variables('fqdn')).nameServers]"
          },
          "parentDnsZoneName": {
            "value": "[parameters('Domain').domain]"
          },
          "dnsZoneName": {
            "value": "[variables('fqdn')]"
          }
        }
      },
      "dependsOn": [
        "[variables('fqdn')]"
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "nsgsrule",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "dependsOn": [ "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]" ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmNicName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddressNameDC'))]",
        "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfigpublic",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressNameDC')))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('vmNicName'))]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('DiagStorageName'))]"

      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[variables('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('vmOsSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmOsDiskName'))]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('VMStorageType')]"
            }
          },

          "copy": [
            {
              "name": "dataDisks",
              "count": "[variables('vmDataDiskCount')]",
              "input": {
                "name": "[concat(variables('vmDataDiskName'),'-',copyIndex('dataDisks'))]",
                "diskSizeGB": "[variables('vmDataDiskSize')]",
                "lun": "[copyIndex('dataDisks')]",
                "createOption": "Empty",
                "managedDisk": {
                  "storageAccountType": "[variables('VMStorageType')]"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNicName')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('DiagStorageName'), '.blob.core.windows.net')]"
          }
        }

      },
      "resources": [
        {
          "type": "extensions",
          "name": "VMDiagnosticsSettings",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "AzureDiagnostics"
          },
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), variables('wadcfgxend')))]",
              "storageAccount": "[variables('DiagStorageName')]"
            },
            "protectedSettings": {
              "storageAccountName": "[variables('DiagStorageName')]",
              "storageAccountKey": "[listkeys(variables('accountid'), '2015-06-15').key1]",
              "storageAccountEndPoint": "https://core.windows.net"
            }
          }
        },
        {
          "apiVersion": "2015-06-15",
          "type": "extensions",
          "name": "CustomScriptExtension",
          "location": "[variables('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[variables('modulesUrlExchangeISODownload')]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ',variables('modulesExchangeISODownload'),' -uri ',variables('exchangeISOUri'),' -destination ',variables('exchangeInstallerPath'))]"
            }
          }
        },


        {
          "apiVersion": "2015-06-15",
          "type": "extensions",
          "name": "dscExtension",
          "location": "[variables('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'))]",
            "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/','CustomScriptExtension')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.15",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configurationFunction": "[variables('configurationFunctionExchange')]",
              "modulesUrl": "[variables('modulesUrlExchange')]",
              "properties": {
                "DomainName": "[variables('exchangeDomainName')]",
                "StorageSize": "[variables('exchangeStorageSizeInGB')]",
                "MaxMustermannUserCreds": {
                  "userName": "MMustermann",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },
                "ErikaMustermannUserCreds": {
                  "userName": "EMustermann",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },
                "JohnDoeUserCreds": {
                  "userName": "JDoe",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },
                "KarlAndersUserCreds": {
                  "userName": "KAnders",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },
                "VeronikaSpulaUserCreds": {
                  "userName": "VSpula",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },
                "LeaMayerUserCreds": {
                  "userName": "LMayer",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },
                "CelinaHerzUserCreds": {
                  "userName": "CHerz",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },
                "WolfgangErnstUserCreds": {
                  "userName": "WErnst",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },
                "JohannFrickUserCreds": {
                  "userName": "JFrick",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },
                "SaschaHarzUserCreds": {
                  "userName": "SHarz",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },
                "WiolettaLonskaUserCreds": {
                  "userName": "WLonska",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },
                "RobertJungUserCreds": {
                  "userName": "RJung",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },

                "VMAdminCreds": {
                  "userName": "[variables('vmAdminUsername')]",
                  "password": "PrivateSettingsRef:vmAdminPassword"
                },
                "Location": "[variables('location')]",
                "Company": "[concat(variables('Company'),'-',parameters('trainee'))]"
              }
            },
            "protectedSettings": {
              "items": {
                "vmAdminPassword": "[parameters('vmAdminPassword')]"
              },
              "DataBlobUri": "[variables('modulesUrlExchangeData')]"
            }
          }
        }


      ]
    },

    {
      "name": "updateVNetDNSAddress",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/','dscExtension')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('UpdateNetworkURL'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "addressPrefix": {
            "value": "[variables('addressPrefix')]"
          },
          "subnets": {
            "value": [
              {
                "name": "[variables('subnetName')]",
                "properties": {
                  "addressPrefix": "[variables('subnetPrefix')]"
                }
              }
            ]
          },
          "dnsServers": {
            "value": [
              "10.0.0.4"
            ]
          }
        }
      }
    }


  ]
}
